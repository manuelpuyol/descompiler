PROGRAMA ::= 
<TIPOS><ASSINATURAS><DADOS><FUNCOES><MAIN>| 
<TIPOS><ASSINATURAS><FUNCOES><MAIN> |
<TIPOS><DADOS><MAIN> |
<TIPOS><MAIN> |
<ASSINATURAS><DADOS><FUNCOES><MAIN> | 
<ASSINATURAS><FUNCOES><MAIN> |
<DADOS><MAIN> |
<MAIN>


TIPOS ::= types { <LISTA_TIPOS> }
LISTA_TIPOS ::= <TIPO><LISTA_TIPOS> | <TIPO>
TIPO ::= <RENOMEAR>|<ESTRUTURA>
RENOMEAR ::= <TIPO_BASE> as <NOME> ;
TIPO_BASE ::= int | float | bool | char
ESTRUTURA ::= struct <NOME> { <LISTA_DECLARACOES> };

LISTA_DECLARACOES ::= <DECLARACAO><LISTA_DECLARACOES> | <DECLARACAO>
DECLARACAO ::= <TIPO_NOME><NOME>; | <TIPO_NOME><NOME>[<INTEIRO>];
TIPO_NOME ::= <TIPO_BASE> | <NOME>

ASSINATURAS ::= functions{ <LISTA_ASSINATURA> }
LISTA_ASSINATURA ::= <ASSINATURA><LISTA_ASSINATURA> | <ASSINATURA>
ASSINATURA ::= <TIPO_NOME> <NOME> (<LISTA_PARAMETRO>);

LISTA_PARAMETRO ::= <PARAMETRO> | <PARAMETRO>, <LISTA_PARAMETRO>
PARAMETRO ::= <TIPO_NOME> <NOME>


DADOS ::= data { <LISTA_DECLARACOES> }

MAIN ::= int main () { <COMANDOS_FUNCAO>}

FUNCOES ::= <LISTA_IMPLEMENTACAO>
LISTA_IMPLEMENTACAO ::= <IMPLEMENTACAO><LISTA_IMPLEMENTACAO>|<IMPLEMENTACAO>
IMPLEMENTACAO ::= 
<TIPO_NOME> <NOME> (<LISTA_PARAMETRO>) { <COMANDOS_FUNCAO> }
COMANDOS_FUNCAO ::= <DADOS><LISTA_COMANDOS><RETORNO> | 
                                                <LISTA_COMANDOS><RETORNO>
RETORNO ::= return <EXPRESSAO>;
LISTA_COMANDOS ::= <COMANDO><LISTA_COMANDOS>|<COMANDO>
COMANDO ::= <ATRIBUICAO>|<IF>|<IFELSE>|<WHILE>|<IMPRESSAO>
ATRIBUICAO ::= <NOME> = <EXPRESSAO>; | <NOME> = <CARACTERE>;
IF ::= if (<BOOLEANA>) { <LISTA_COMANDOS> }
IFELSE ::= if (<BOOLEANA>) { <LISTA_COMANDOS> } else { <LISTA_COMANDOS> }
WHILE ::= while(<BOOLEANA>) { <LISTA_COMANDOS> }
IMPRESSAO ::= prints(<STRING>) | printsln(<STRING>) | print(<EXPRESSAO>) | println(<EXPRESSAO>)

CARACTERE ::= '<ASCII>' | '<TRATADOS>'
EXPRESSAO ::= <ARITMETICA>|<BOOLEANA>

BOOLEANA ::= <BOOLEANA> || <TERMO_BOOL1> | <TERMO_BOOL1>
TERMO_BOOL1 ::= <TERMO_BOOL1> && <TERMO_BOOL2> | <TERMO_BOOL1>
TERMO_BOOL2 ::= !<FATOR_BOOL> | <FATOR_BOOL>
FATOR_BOOL ::= true | false | (<BOOLEANA>) | <VARIAVEL> | <CHAMADA> |
(<ARITMETICA><COMAPADOR_ARIT><ARITMETICA>) |
(<BOOLEANA><COMAPADOR_BOOL><BOOLEANA>)

COMAPADOR_ARIT ::= > | >= | < | <= | <COMAPADOR_BOOL>
COMAPADOR_BOOL ::= == | !=

ARITMETICA ::= 
<ARITMETICA> + <TERMO_ARIT1> |
<ARITMETICA> - <TERMO_ARIT1> |
<TERMO_ARIT1>

TERMO_ARIT1 ::= 
<TERMO_ARIT1> * <FATOR_ARIT> |
<TERMO_ARIT1> / <FATOR_ARIT> |
<TERMO_ARIT1> % <FATOR_ARIT> |
<FATOR_ARIT>

FATOR_ARIT ::= <NUMERO> | -<NUMERO> | (<ARITMETICA>) | -(<ARITMETICA>) | <VARIAVEL> | <CHAMADA>

CHAMADA ::= <NOME>(<LISTA_ARGUMENTO>) | <NOME>()
LISTA_ARGUMENTO ::= <EXPRESSAO> | <EXPRESSAO>, <LISTA_ARGUMENTO> | <CARACTERE> | <CARACTERE>, <LISTA_ARGUMENTO>

VARIAVEL ::= <NOME> | <NOME>[<INTEIRO>] | <NOME>.<NOME>

NOME ::= <LETRA> | <LETRA><NOME_CHAR>
NOME_CHAR ::= <LETRA> | <DIGITO> | <ESPECIAIS> | <LETRA><NOME_CHAR> | <DIGITO><NOME_CHAR> | <ESPECIAIS><NOME_CHAR>
ESPECIAIS ::= _ | ?

STRING ::= "<CARACTERES_STRING>"
CARACTERES_STRING ::= <ASCII><CARACTERES_STRING> | <TRATADOS><CARACTERES_STRING>

INTEIRO ::= <DIGITO><INTEIRO> | <DIGITO>
NUMERO ::= <INTEIRO> | <INTEIRO>.<INTEIRO>

LETRA ::=
a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G  | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
DIGITO ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
ASCII ::=   | ! | # | $ | % | & | ( | ) | * | + | , | - | . | / | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | : | ; | < | = | > | ? | @ | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | [ |  ] | ^ | _ | ` | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | { | | | } | ~
PROBLEMATICOS ::= " | ' | \
TRATADOS ::= \<PROBLEMATICOS> | \n | \r | \t
